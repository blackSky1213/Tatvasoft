#pragma checksum "C:\Users\kbsar\source\repos\HelperLand\HelperLand\Views\Customer\BookService.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "20af325f444cfd6c4bb5aedc7b718d6efe9ca794"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Customer_BookService), @"mvc.1.0.view", @"/Views/Customer/BookService.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\kbsar\source\repos\HelperLand\HelperLand\Views\_ViewImports.cshtml"
using HelperLand;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\kbsar\source\repos\HelperLand\HelperLand\Views\_ViewImports.cshtml"
using HelperLand.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"20af325f444cfd6c4bb5aedc7b718d6efe9ca794", @"/Views/Customer/BookService.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"792c06a17c9f5c83ca6617eee99384b5ffd85ea5", @"/Views/_ViewImports.cshtml")]
    public class Views_Customer_BookService : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString(""), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("#"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\kbsar\source\repos\HelperLand\HelperLand\Views\Customer\BookService.cshtml"
  
    ViewData["Title"] = "BookService";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca7945556", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"" />
    <meta http-equiv=""X-UA-Compatible"" content=""IE=edge"" />
    <meta name=""viewport"" content=""width=device-width, initial-scale=1.0"" />

    <link rel=""preconnect"" href=""https://fonts.googleapis.com"" />
    <link rel=""preconnect"" href=""https://fonts.gstatic.com"" crossorigin />
    <link href=""https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap""
          rel=""stylesheet"" />
    <link href=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css""
          rel=""stylesheet""
          integrity=""sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC""
          crossorigin=""anonymous"" />
    <link rel=""stylesheet""
          href=""https://pro.fontawesome.com/releases/v5.10.0/css/all.css""
          integrity=""sha38");
                WriteLiteral("4-AYmEC3Yw5cVb3ZcuHtOA93w35dYTsvhLPVnYs9eStHfGJvOvKxVfELGroGkvsg+p\"\r\n          crossorigin=\"anonymous\" />\r\n    <link rel=\"stylesheet\" href=\"/css/bookServiceStyle.css\" />\r\n    <title>Book service</title>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca7947836", async() => {
                WriteLiteral(@"
    <nav class=""navbar navbar-expand-lg boader"">
        <a href=""#"" class=""navbar-brand""><img src=""/image/logo-small.png"" /></a>
        <button class=""navbar-toggler text-white""
                type=""button""
                data-bs-toggle=""collapse""
                data-bs-target=""#navbarSupportedContent""
                aria-controls=""navbarSupportedContent""
                aria-expanded=""false""
                aria-label=""Toggle navigation"">
            <span class=""navbar-toggler-icon"" style=""border: none"">
                <i class=""fas fa-bars""></i>
            </span>
        </button>
        <div class=""collapse navbar-collapse"" id=""navbarSupportedContent"">
            <ul class=""navbar-nav ms-auto text-center"">
                <li class=""nav-item"">
                    <a");
                BeginWriteAttribute("href", " href=\"", 2146, "\"", 2153, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"button book-btn nav-link\">Book now</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a");
                BeginWriteAttribute("href", " href=\"", 2286, "\"", 2293, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"nav-link\">Prices & services</a>\r\n                </li>\r\n                <li class=\"nav-item\"><a");
                BeginWriteAttribute("href", " href=\"", 2397, "\"", 2404, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"nav-link\">Warranty</a></li>\r\n                <li class=\"nav-item\"><a");
                BeginWriteAttribute("href", " href=\"", 2481, "\"", 2488, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"nav-link\">Blog</a></li>\r\n                <li class=\"nav-item\"><a");
                BeginWriteAttribute("href", " href=\"", 2561, "\"", 2568, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"nav-link\">Contact</a></li>\r\n                <li class=\"nav-item\">\r\n                    <a");
                BeginWriteAttribute("href", " href=\"", 2666, "\"", 2673, 0);
                EndWriteAttribute();
                WriteLiteral(" class=\"button login-btn nav-link\">Login</a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a");
                BeginWriteAttribute("href", " href=\"", 2804, "\"", 2811, 0);
                EndWriteAttribute();
                WriteLiteral(@" class=""button helper-btn nav-link"">Become a Helper</a>
                </li>
            </ul>
        </div>
    </nav>
    <section id=""header"" class=""p-boader"">
        <img class=""header-img"" src=""/image/book-service-banner.jpg"" />
    </section>

    <section id=""setup-service"">
        <h2>Set up your cleaning service</h2>
        <div class=""diveder"">
            <span class=""line""></span><img src=""/image/separator.png"" alt=""diveder"" /><span class=""line""></span>
        </div>

        <div class=""setup"">
            <div class=""setup-left"">
                <div class=""setup-options"">
                    <ul>
                        <li id=""1"" class=""add add-color"">
                            <img id=""img1""
                                 src=""/image/setup-service-white.png""
                                 alt=""setupService"" />
                            <span> Setup Service </span>
                        </li>
                        <li id=""2"">
                        ");
                WriteLiteral(@"    <img id=""img2"" src=""/image/schedule.png"" alt=""schedule"" />
                            <span>Schedule & Plan</span>
                        </li>
                        <li id=""3"">
                            <img id=""img3"" src=""/image/details.png"" alt=""details"" />
                            <span>Your Details</span>
                        </li>
                        <li id=""4"">
                            <img id=""img4"" src=""/image/payment.png"" alt=""make payment"" />
                            <span>Make Payment</span>
                        </li>
                    </ul>
                </div>

                <div class=""pincode-check"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79412477", async() => {
                    WriteLiteral(@"
                        <label class=""pin-label"" for=""pincode"">
                            Please enter your zip code:
                        </label>
                        <br />
                        <input class=""pincode-input-box""
                               type=""text""
                               name=""pincode""
                               placeholder=""Postal code"" />
                        <input class=""pin-btn"" type=""submit"" value=""check availability"" />
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </div>\r\n\r\n                <div class=\"schedule-plan\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79414694", async() => {
                    WriteLiteral(@"
                        <label for=""selectRoomAndBath"">
                            Select number of rooms and bath
                        </label>
                        <br />
                        <div>
                            <select name=""numberOfRoom""");
                    BeginWriteAttribute("id", " id=\"", 5476, "\"", 5481, 0);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79415431", async() => {
                        WriteLiteral("1 bed");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79416750", async() => {
                        WriteLiteral("2 bed");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79418069", async() => {
                        WriteLiteral("3 bed");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79419388", async() => {
                        WriteLiteral("4 bed");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79420707", async() => {
                        WriteLiteral("5 bed");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                            </select>\r\n                            <select name=\"numberOfBath\"");
                    BeginWriteAttribute("id", " id=\"", 5909, "\"", 5914, 0);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79422289", async() => {
                        WriteLiteral("1 bath");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79423609", async() => {
                        WriteLiteral("1 bath");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79424929", async() => {
                        WriteLiteral("1 bath");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79426249", async() => {
                        WriteLiteral("1 bath");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79427569", async() => {
                        WriteLiteral("1 bath");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                            </select>
                        </div>
                        <div class=""selectRoomAndBath"">
                            <div>
                                <label for=""dateAndtime""> When do you need cleaner? </label>
                                <div style=""display: flex"">
                                    <div class=""date-input"">
                                        <img src=""/image/calendar.png"" alt=""calender"" />
                                        <input type=""date"" name=""date"" />
                                    </div>
                                    <input type=""time"" name=""time""");
                    BeginWriteAttribute("id", " id=\"", 6908, "\"", 6913, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" />
                                </div>
                            </div>
                            <div class=""totalTime"">
                                <label for=""dateAndtime""> When do you need cleaner? </label>
                                <br />
                                <select name=""range""");
                    BeginWriteAttribute("id", " id=\"", 7234, "\"", 7239, 0);
                    EndWriteAttribute();
                    WriteLiteral(">\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79430219", async() => {
                        WriteLiteral("1.0 Hrs");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79431544", async() => {
                        WriteLiteral("1.0 Hrs");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79432869", async() => {
                        WriteLiteral("1.0 Hrs");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79434194", async() => {
                        WriteLiteral("1.0 Hrs");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral("\r\n                                    ");
                    __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79435519", async() => {
                        WriteLiteral("1.0 Hrs");
                    }
                    );
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                    __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                    __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                    __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                    await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                    if (!__tagHelperExecutionContext.Output.IsContentModified)
                    {
                        await __tagHelperExecutionContext.SetOutputContentAsync();
                    }
                    Write(__tagHelperExecutionContext.Output);
                    __tagHelperExecutionContext = __tagHelperScopeManager.End();
                    WriteLiteral(@"
                                </select>
                            </div>
                        </div>
                        <div class=""extraService-checkbox"">
                            <h4>Extra services</h4>
                            <div id=""custom-checkboxes"">
                                <div class=""checkbox"">
                                    <input type=""checkbox""
                                           name=""insideCabinet""
                                           id=""insideCabinetCheck""
                                           class=""htmlcheckbox""
                                           onclick=""onInsideCabinet();"" />
                                    <label for=""insideCabinetCheck"" onclick=""onInsideCabinet();"">
                                        <img src=""/image/3.png"" id=""insideCabinetImg""");
                    BeginWriteAttribute("alt", " alt=\"", 8460, "\"", 8466, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" />
                                    </label>
                                    <p>inside cabinets</p>
                                </div>

                                <div class=""checkbox"">
                                    <input type=""checkbox""
                                           id=""insideFridgeCheck""
                                           name=""insideFridge""
                                           class=""htmlcheckbox""
                                           onclick=""onInsideFridge();"" />
                                    <label for=""insideFridgeCheck"">
                                        <img src=""/image/5.png""
                                             id=""insideFridgeImg""");
                    BeginWriteAttribute("alt", "\r\n                                             alt=\"", 9206, "\"", 9258, 0);
                    EndWriteAttribute();
                    WriteLiteral(@"
                                             onclick=""onInsideFridge();"" />
                                    </label>
                                    <p>inside Fridge</p>
                                </div>

                                <div class=""checkbox"">
                                    <input type=""checkbox""
                                           name=""insideOven""
                                           id=""insideOvenCheck""
                                           class=""htmlcheckbox""
                                           onclick=""onInsideOven();"" />
                                    <label for=""insideOvenCheck"" onclick=""onInsideOven();"">
                                        <img src=""/image/4.png"" id=""insideOvenImg""");
                    BeginWriteAttribute("alt", " alt=\"", 10040, "\"", 10046, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" />
                                    </label>
                                    <p>inside Oven</p>
                                </div>

                                <div class=""checkbox"">
                                    <input type=""checkbox""
                                           id=""laundryCheck""
                                           name=""laundry""
                                           class=""htmlcheckbox""
                                           onclick=""onLaundry();"" />
                                    <label for=""laundryCheck"" onclick=""onLaundry();"">
                                        <img src=""/image/2.png"" id=""laundryImg""");
                    BeginWriteAttribute("alt", " alt=\"", 10734, "\"", 10740, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" />
                                    </label>
                                    <p>Laundry Wash & Dry</p>
                                </div>

                                <div class=""checkbox"">
                                    <input type=""checkbox""
                                           id=""interiorCheck""
                                           name=""interior""
                                           class=""htmlcheckbox""
                                           onclick=""onInterior();"" />
                                    <label for=""interiorCheck"" onclick=""onInterior();"">
                                        <img src=""/image/1.png"" id=""interiorImg""");
                    BeginWriteAttribute("alt", " alt=\"", 11441, "\"", 11447, 0);
                    EndWriteAttribute();
                    WriteLiteral(@" />
                                    </label>
                                    <p>interior Windows</p>
                                </div>
                            </div>
                        </div>
                        <div class=""comment-box"">
                            <label for=""comment""> Comments </label>
                            <br />
                            <textarea name=""comment""
                                      id=""comment""
                                      cols=""30""
                                      rows=""10""></textarea>
                            <br />
                            <input type=""checkbox"" name=""have a pat"" />
                            <label class=""have-pet"">I have pets at home</label>
                        </div>

                        <div style=""text-align: right"">
                            <input id=""continue""
                                   type=""submit""
                                   name=""submit""
 ");
                    WriteLiteral("                                  value=\"Continue\" />\r\n                        </div>\r\n                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </div>\r\n\r\n                <div id=\"address-list\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79444165", async() => {
                    WriteLiteral(@"
                        <label for=""Address"">
                            Enter your details, so we can serve you in better way!
                        </label>
                        <div class=""address-check-box"">
                            <div><input type=""radio"" name=""address1"" /></div>
                            <div>
                                <p>
                                    <strong>Address: </strong> jankinagar 112, chitra, bhavnagar
                                    364004
                                </p>
                                <p><strong>Phone number: </strong>9456315431</p>
                            </div>
                        </div>

                        <div class=""address-check-box"">
                            <div><input type=""radio"" name=""address1"" /></div>
                            <div>
                                <p>
                                    <strong>Address: </strong> jankinagar 112, chitra, bhavnagar
           ");
                    WriteLiteral(@"                         364004
                                </p>
                                <p><strong>Phone number: </strong>9456315431</p>
                            </div>
                        </div>

                        <button type=""button"" class=""add-address-btn"">
                            + Add New Address
                        </button>
                        <div class=""add-address-box"">
                            <div class=""address-taker-box"">
                                <div>
                                    <label for=""streetname""> Street name </label>
                                    <br />
                                    <input type=""text""
                                           name=""streetname""
                                           placeholder=""Street name"" />
                                </div>
                                <div>
                                    <label for=""housename""> House number </label>
            ");
                    WriteLiteral(@"                        <br />

                                    <input type=""text""
                                           name=""housename""
                                           placeholder=""House name"" />
                                </div>
                            </div>
                            <div class=""address-taker-box"">
                                <div>
                                    <label for=""postalcode""> Postal code </label>
                                    <br />
                                    <input type=""text""
                                           name=""postalcode""
                                           placeholder=""Postal code"" />
                                </div>
                                <div>
                                    <label for=""city""> City </label>
                                    <br />
                                    <input type=""text"" name=""city"" placeholder=""City"" />
                        ");
                    WriteLiteral(@"        </div>
                            </div>
                            <div class=""address-taker-box tel"">
                                <div>
                                    <label for=""phonenumber""> Phone number </label>
                                    <br />
                                    <div class=""tel-box"">
                                        <span class=""tel-icon""> +49 </span>
                                        <input type=""tel""
                                               name=""phonenumber""
                                               placeholder=""Phone number"" />
                                    </div>
                                </div>
                                <div id=""tel2""></div>
                            </div>
                            <div class=""Button"">
                                <button class=""save-btn"">Save</button>
                                <button class=""clear-btn"">Cancel</button>
                           ");
                    WriteLiteral(@" </div>
                        </div>
                        <h4 class=""favourite-title"">Your Favourite Service Providers</h4>
                        <div class=""favourite-box"">
                            <label for=""comment"">
                                Your can choose your favourite service provider from the below
                                list
                            </label>
                            <div class=""favourite-worker"">
                                <div style=""text-align: center; width: 20%"">
                                    <img class=""favourite-worker-img""
                                         src=""/image/cap.png""
                                         alt=""cap"" />
                                    <p class=""mb-2"">Sandip Patel</p>
                                    <button class=""btn btn-outline-secondary"" type=""button"">
                                        Select
                                    </button>
                              ");
                    WriteLiteral(@"  </div>
                            </div>
                        </div>
                        <div style=""text-align: right"">
                            <input id=""continue""
                                   type=""submit""
                                   name=""submit""
                                   value=""Continue"" />
                        </div>
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </div>\r\n\r\n                <div id=\"make-payment\">\r\n                    <h4>Pay sechurely with Helperland payment gateway!</h4>\r\n\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79451546", async() => {
                    WriteLiteral(@"
                        <input class=""form-control make-payment-input""
                               type=""text""
                               placeholder=""card number"" />

                        <div class=""payment-condition"">
                            <input type=""checkbox""
                                   name=""acceptPrivacyPolicy""
                                   id=""acceptPrivacyPolicy"" />
                            <label for=""acceptPrivacyPolicy"">
                                I accepted <a");
                    BeginWriteAttribute("href", " href=\"", 18935, "\"", 18942, 0);
                    EndWriteAttribute();
                    WriteLiteral(">terms and conditions</a>, the\r\n                                cancellation policy and the <a");
                    BeginWriteAttribute("href", " href=\"", 19037, "\"", 19044, 0);
                    EndWriteAttribute();
                    WriteLiteral(@">privacy policy</a>. I
                                confirm that Helperland starts to execute the contract before
                                the expiry of the withdrawal period and I lose my right of
                                withdrawal as a consumer with full performance of the
                                contract.
                            </label>
                        </div>

                        <div style=""text-align: right"">
                            <input type=""submit""
                                   class=""complete""
                                   value=""Complete Booking"" />
                        </div>
                    ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                </div>
            </div>
            <div class=""setup-right"">
                <div class=""price-card"">
                    <h3>Payment Summary</h3>
                    <div class=""details"">
                        <p>01/01/2018  4:00 pm <span>1 bed, 1 bath.</span></p>
                    </div>
                    <h4>Duration</h4>
                    <div class=""duration"">
                        <p>Basic <span>Inside cabinets (extra)</span></p>
                        <p style=""text-align: right"">3 Hrs <span>30 Mins</span></p>
                    </div>
                    <div class=""cover"">
                        <div class=""totalhour"">
                            <span><strong>Total Service Time</strong></span>
                            <span><strong>3.5 Hrs</strong></span>
                        </div>
                    </div>
                    <div class=""cover"">
                        <div class=""pay-list"">
                            <p>Per cleaning <");
                WriteLiteral(@"span>Discount</span></p>
                            <p style=""text-align: right"">
                                <strong>$87</strong><span><strong>-$27</strong></span>
                            </p>
                        </div>
                    </div>
                    <div class=""pay-list totalPay"">
                        <p>
                            <span style=""color: #1d7a8c; font-size: 20px; padding-bottom: 11px"">Total Payment</span>
                            <span>Effective Price</span>
                        </p>
                        <p style=""text-align: right"">
                            <strong style=""color: #1d7a8c; font-size: 42px"">$63</strong><span><strong>$50.4</strong></span>
                        </p>
                    </div>
                    <p class=""condition"">
                        <span style=""color: red"">*</span>You will save 20% according to
                        §35a EStG.
                    </p>

                    <div class=""see");
                WriteLiteral(@"WhatInclude"">
                        <p>
                            <img style=""margin-bottom: 5px; margin-right: 5px""
                                 src=""/image/smiley.png""
                                 alt=""smile"" />
                            See what is always included
                        </p>
                    </div>
                </div>
                <h3 class=""question"">Questions?</h3>
                <div class=""accordion"" id=""accordionExample"">
                    <div class=""accordion-item question-list"">
                        <h2 class=""accordion-header"" id=""headingOne"">
                            <button class=""accordion-button""
                                    type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapseOne""
                                    aria-expanded=""true""
                                    aria-controls=""collapseOne"">
                                <im");
                WriteLiteral(@"g class=""right-icon""
                                     src=""/image/keyboard-right-arrow-button-copy.png""
                                     alt=""right"" />
                                Which Helperland professional will come to my place?
                            </button>
                        </h2>
                        <div id=""collapseOne""
                             class=""accordion-collapse collapse""
                             aria-labelledby=""headingOne""
                             data-bs-parent=""#accordionExample"">
                            <div class=""accordion-body"">
                                <strong>This is the first item's accordion body.</strong> It
                                is shown by default, until the collapse plugin adds the
                                appropriate classes that we use to style each element. These
                                classes control the overall appearance, as well as the showing
                                and ");
                WriteLiteral(@"hiding via CSS transitions. You can modify any of this
                                with custom CSS or overriding our default variables. It's also
                                worth noting that just about any HTML can go within the
                                <code>.accordion-body</code>, though the transition does limit
                                overflow.
                            </div>
                        </div>
                    </div>
                    <div class=""accordion-item question-list"">
                        <h2 class=""accordion-header"" id=""headingTwo"">
                            <button class=""accordion-button collapsed""
                                    type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapseTwo""
                                    aria-expanded=""false""
                                    aria-controls=""collapseTwo"">
                                <im");
                WriteLiteral(@"g class=""right-icon""
                                     src=""/image/keyboard-right-arrow-button-copy.png""
                                     alt=""right"" />
                                Which Helperland professional will come to my place?
                            </button>
                        </h2>
                        <div id=""collapseTwo""
                             class=""accordion-collapse collapse""
                             aria-labelledby=""headingTwo""
                             data-bs-parent=""#accordionExample"">
                            <div class=""accordion-body"">
                                <strong>This is the second item's accordion body.</strong> It
                                is hidden by default, until the collapse plugin adds the
                                appropriate classes that we use to style each element. These
                                classes control the overall appearance, as well as the showing
                                an");
                WriteLiteral(@"d hiding via CSS transitions. You can modify any of this
                                with custom CSS or overriding our default variables. It's also
                                worth noting that just about any HTML can go within the
                                <code>.accordion-body</code>, though the transition does limit
                                overflow.
                            </div>
                        </div>
                    </div>
                    <div class=""accordion-item question-list"">
                        <h2 class=""accordion-header"" id=""headingThree"">
                            <button class=""accordion-button collapsed""
                                    type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapseThree""
                                    aria-expanded=""false""
                                    aria-controls=""collapseThree"">
                           ");
                WriteLiteral(@"     <img class=""right-icon""
                                     src=""/image/keyboard-right-arrow-button-copy.png""
                                     alt=""right"" />
                                Which Helperland professional will come to my place?
                            </button>
                        </h2>
                        <div id=""collapseThree""
                             class=""accordion-collapse collapse""
                             aria-labelledby=""headingThree""
                             data-bs-parent=""#accordionExample"">
                            <div class=""accordion-body"">
                                <strong>This is the third item's accordion body.</strong> It
                                is hidden by default, until the collapse plugin adds the
                                appropriate classes that we use to style each element. These
                                classes control the overall appearance, as well as the showing
                       ");
                WriteLiteral(@"         and hiding via CSS transitions. You can modify any of this
                                with custom CSS or overriding our default variables. It's also
                                worth noting that just about any HTML can go within the
                                <code>.accordion-body</code>, though the transition does limit
                                overflow.
                            </div>
                        </div>
                    </div>
                    <div class=""accordion-item question-list"">
                        <h2 class=""accordion-header"" id=""headingThree"">
                            <button class=""accordion-button collapsed""
                                    type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapseFour""
                                    aria-expanded=""false""
                                    aria-controls=""collapseFour"">
                  ");
                WriteLiteral(@"              <img class=""right-icon""
                                     src=""/image/keyboard-right-arrow-button-copy.png""
                                     alt=""right"" />
                                Which Helperland professional will come to my place?
                            </button>
                        </h2>
                        <div id=""collapseFour""
                             class=""accordion-collapse collapse""
                             aria-labelledby=""headingFour""
                             data-bs-parent=""#accordionExample"">
                            <div class=""accordion-body"">
                                <strong>This is the third item's accordion body.</strong> It
                                is hidden by default, until the collapse plugin adds the
                                appropriate classes that we use to style each element. These
                                classes control the overall appearance, as well as the showing
                ");
                WriteLiteral(@"                and hiding via CSS transitions. You can modify any of this
                                with custom CSS or overriding our default variables. It's also
                                worth noting that just about any HTML can go within the
                                <code>.accordion-body</code>, though the transition does limit
                                overflow.
                            </div>
                        </div>
                    </div>
                    <div class=""accordion-item question-list"">
                        <h2 class=""accordion-header"" id=""headingThree"">
                            <button class=""accordion-button collapsed""
                                    type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapseFive""
                                    aria-expanded=""false""
                                    aria-controls=""collapseFive"">
           ");
                WriteLiteral(@"                     <img class=""right-icon""
                                     src=""/image/keyboard-right-arrow-button-copy.png""
                                     alt=""right"" />
                                Which Helperland professional will come to my place?
                            </button>
                        </h2>
                        <div id=""collapseFive""
                             class=""accordion-collapse collapse""
                             aria-labelledby=""headingFive""
                             data-bs-parent=""#accordionExample"">
                            <div class=""accordion-body"">
                                <strong>This is the third item's accordion body.</strong> It
                                is hidden by default, until the collapse plugin adds the
                                appropriate classes that we use to style each element. These
                                classes control the overall appearance, as well as the showing
         ");
                WriteLiteral(@"                       and hiding via CSS transitions. You can modify any of this
                                with custom CSS or overriding our default variables. It's also
                                worth noting that just about any HTML can go within the
                                <code>.accordion-body</code>, though the transition does limit
                                overflow.
                            </div>
                        </div>
                    </div>
                    <div class=""accordion-item question-list"">
                        <h2 class=""accordion-header"" id=""headingThree"">
                            <button class=""accordion-button collapsed""
                                    type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapseSix""
                                    aria-expanded=""false""
                                    aria-controls=""collapseSix"">
      ");
                WriteLiteral(@"                          <img class=""right-icon""
                                     src=""/image/keyboard-right-arrow-button-copy.png""
                                     alt=""right"" />
                                Which Helperland professional will come to my place?
                            </button>
                        </h2>
                        <div id=""collapseSix""
                             class=""accordion-collapse collapse""
                             aria-labelledby=""headingSix""
                             data-bs-parent=""#accordionExample"">
                            <div class=""accordion-body"">
                                <strong>This is the third item's accordion body.</strong> It
                                is hidden by default, until the collapse plugin adds the
                                appropriate classes that we use to style each element. These
                                classes control the overall appearance, as well as the showing
      ");
                WriteLiteral(@"                          and hiding via CSS transitions. You can modify any of this
                                with custom CSS or overriding our default variables. It's also
                                worth noting that just about any HTML can go within the
                                <code>.accordion-body</code>, though the transition does limit
                                overflow.
                            </div>
                        </div>
                    </div>
                    <div class=""accordion-item question-list"">
                        <h2 class=""accordion-header"" id=""headingThree"">
                            <button class=""accordion-button collapsed""
                                    type=""button""
                                    data-bs-toggle=""collapse""
                                    data-bs-target=""#collapseSeven""
                                    aria-expanded=""false""
                                    aria-controls=""collapseSeven"">");
                WriteLiteral(@"
                                <p>
                                    <img class=""right-icon""
                                         src=""/image/keyboard-right-arrow-button-copy.png""
                                         alt=""right"" />
                                    Which Helperland professional will come to my place?
                                </p>
                            </button>
                        </h2>
                        <div id=""collapseSeven""
                             class=""accordion-collapse collapse""
                             aria-labelledby=""headingSeven""
                             data-bs-parent=""#accordionExample"">
                            <div class=""accordion-body"">
                                <strong>This is the third item's accordion body.</strong> It
                                is hidden by default, until the collapse plugin adds the
                                appropriate classes that we use to style each element. These
");
                WriteLiteral(@"                                classes control the overall appearance, as well as the showing
                                and hiding via CSS transitions. You can modify any of this
                                with custom CSS or overriding our default variables. It's also
                                worth noting that just about any HTML can go within the
                                <code>.accordion-body</code>, though the transition does limit
                                overflow.
                            </div>
                        </div>
                    </div>
                </div>
                <div style=""text-align: left; margin: 10px 0"">
                    <a class=""more-help""");
                BeginWriteAttribute("href", " href=\"", 36861, "\"", 36868, 0);
                EndWriteAttribute();
                WriteLiteral(">For more help</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n\r\n    <section id=\"newuser\">\r\n        <h3>GET OUR NEWSETTER</h3>\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20af325f444cfd6c4bb5aedc7b718d6efe9ca79473124", async() => {
                    WriteLiteral("\r\n            <input class=\"newsetter\"\r\n                   type=\"email\"\r\n                   name=\"email\"\r\n                   placeholder=\"YOUR EMAIL\" />\r\n            <input type=\"submit\" class=\"btn-submit\" name=\"submit\" value=\"sumit\" />\r\n        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    </section>

    <div id=""responsivePaySum"">
        <button type=""button""
                data-bs-toggle=""modal""
                data-bs-target=""#paymentSummaryModal"">
            Payment Summary
        </button>
    </div>

    <!-- PS modal starts -->

    <div class=""modal fade"" id=""paymentSummaryModal"" tabindex=""-1"">
        <div class=""modal-dialog modal-dialog-scrollable"">
            <div class=""modal-content"">
                <div class=""modal-header"">
                    <h5 class=""modal-title"" id=""exampleModalLabel"">Payment Summary</h5>
                    <button type=""button""
                            class=""btn-close""
                            data-bs-dismiss=""modal""
                            aria-label=""Close""></button>
                </div>
                <div class=""modal-body"">
                    <div id=""modal-booknow-side"">
                        <div id=""modal-paymentSummary"">
                            <div id=""modal-payment-questiondiv"">
      ");
                WriteLiteral(@"                         
                                <div id=""modal-service-time"" class=""flex-column"">
                                    <div id=""modal-timeandbed"">
                                        <p>01/01/2022@4:00pm</p>
                                        <p>1 bed, 1 bath.</p>
                                    </div>

                                    <b>Duration</b>
                                    <div>
                                        <span>Basic</span>
                                        <span>3 hrs</span>
                                    </div>
                                    <div>
                                        <span>Inside cabinets (extra)</span>
                                        <span>30 mins</span>
                                    </div>

                                    <div id=""modal-total-time"">
                                        <span><b>Total Service Time</b></span>
                                        ");
                WriteLiteral(@"<span><b>3.5 hrs</b></span>
                                    </div>
                                </div>
                                <!-- service time ends -->
                                <!-- cost strats -->
                                <div id=""modal-service-cost"" class=""flex-column"">
                                    <div>
                                        <span>Per cleaning</span>
                                        <span><b>&dollar;87</b></span>
                                    </div>

                                    <div>
                                        <span>Discount</span>
                                        <span><b>- &dollar;27</b></span>
                                    </div>
                                </div>
                                <!-- cost ends -->
                                <!-- payment starts-->
                                <div id=""modal-service-pay"" class=""flex-column"">
                                ");
                WriteLiteral(@"    <div>
                                        <span id=""total-pay"">Total Payment</span>
                                        <span id=""amount"">&dollar;63</span>
                                    </div>
                                    <div>
                                        <span>Effective Price</span>
                                        <span id=""last-amount""><b>&dollar;50.4</b></span>
                                    </div>
                                </div>
                                <!-- payment ends -->

                                <p id=""modal-saveP"">
                                    <span>*</span>You will save 20% according to §35a EStG.
                                </p>

                                <!-- modal starts -->
                                <div id=""modal-call-modal"">
                                    <a");
                BeginWriteAttribute("href", " href=\"", 41296, "\"", 41303, 0);
                EndWriteAttribute();
                WriteLiteral(@">
                                        <i class=""far fa-smile""></i> See what is always
                                        included
                                    </a>
                                </div>
                                <!-- modal ends -->
                            </div>

                            <div id=""modal-book-questions"">
                                <div id=""modal-question-title"">
                                    <h3>Questions?</h3>
                                </div>
                                <!-- question main starts -->
                                <div id=""modal-question-main"">
                                    <div class=""faq-qa"" style=""display: flex"">
                                        <a id=""faq-q1""
                                           href=""#faq-ans1""
                                           data-bs-toggle=""collapse""
                                           style=""font-size: 16px; color: #565656"">
       ");
                WriteLiteral(@"                                     <div style=""display: flex"">
                                                <div>
                                                    <img id=""faq-ar-1""
                                                         class=""faq_arrow_img""
                                                         src=""/image/left-arrow.png""");
                BeginWriteAttribute("alt", "\r\n                                                         alt=\"", 42685, "\"", 42749, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                                                </div>

                                                <p>
                                                    Which Helperland professional will come to my place?
                                                </p>
                                            </div>
                                        </a>
                                    </div>
                                    <div id=""faq-ans1"" class=""collapse faq-ans"">
                                        Helperland has a vast network of experienced, top-rated
                                        cleaners. Based on the time and date of your request, we
                                        work to assign the best professional available.Like
                                        working with a specific pro? Add them to your Pro Team
                                        from the mobile app and they'll be requested first for all
                                        ");
                WriteLiteral(@"future bookings.You will receive an email with details
                                        about your professional prior to your appointment.
                                    </div>

                                    <div class=""faq-qa"" style=""display: flex"">
                                        <a id=""faq-q2""
                                           href=""#faq-ans2""
                                           data-bs-toggle=""collapse""
                                           style=""font-size: 16px; color: #565656"">
                                            <div style=""display: flex"">
                                                <div>
                                                    <img id=""faq-ar-2""
                                                         class=""faq_arrow_img""
                                                         src=""/image/left-arrow.png""");
                BeginWriteAttribute("alt", "\r\n                                                         alt=\"", 44684, "\"", 44748, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                                                </div>
                                                <p>What's included in a cleaning?</p>
                                            </div>
                                        </a>
                                    </div>
                                    <div id=""faq-ans2"" class=""collapse faq-ans"">
                                        Bedroom, Living Room & Common
                                        Areas,Bathrooms,Kitchen,Extras
                                    </div>

                                    <div class=""faq-qa"" style=""display: flex"">
                                        <a id=""faq-q3""
                                           href=""#faq-ans3""
                                           data-bs-toggle=""collapse""
                                           style=""font-size: 16px; color: #565656"">
                                            <div style=""display: flex"">
                                      ");
                WriteLiteral("          <div>\r\n                                                    <img id=\"faq-ar-3\"\r\n                                                         class=\"faq_arrow_img\"\r\n                                                         src=\"/image/left-arrow.png\"");
                BeginWriteAttribute("alt", "\r\n                                                         alt=\"", 46026, "\"", 46090, 0);
                EndWriteAttribute();
                WriteLiteral(@" />
                                                </div>
                                                <p>
                                                    Lorem ipsum dolor sit amet, consectetur adipiscing
                                                    elit?
                                                </p>
                                            </div>
                                        </a>
                                    </div>
                                    <div id=""faq-ans3"" class=""collapse faq-ans"">
                                        Lorem ipsum dolor sit amet, consectetur adipiscing elit.
                                        Sed id diam tincidunt, fringilla ante vitae, dapibus
                                        velit. Vivamus id tortor rhoncus, efficitur quam at,
                                        suscipit tortor.
                                    </div>

                                    <div id=""for-more-help"">
                 ");
                WriteLiteral("                       <a");
                BeginWriteAttribute("href", " href=\"", 47140, "\"", 47147, 0);
                EndWriteAttribute();
                WriteLiteral(@">For more help</a>
                                    </div>
                                </div>
                                <!-- question main ends -->
                            </div>
                        </div>
                    </div>
                </div>
               
            </div>
        </div>
    </div>

    <!-- PS modal ends -->
   ");
#nullable restore
#line 854 "C:\Users\kbsar\source\repos\HelperLand\HelperLand\Views\Customer\BookService.cshtml"
Write(await Html.PartialAsync("footer"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@" 
        <hr class=""section-divder""
            style=""background-color: #424242; margin-top: 0; margin-bottom: 20px"" />
        <p class=""policy"">
            ©2018 Helperland. All rights reserved.
            <a href=""#"">Terms and Conditions</a> | <a href=""#"">Privacy Policy</a>
        </p>
    </section>

    <!-- bootstrap js cdn  -->
    <script src=""https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js""
            integrity=""sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM""
            crossorigin=""anonymous""></script>
    <script>
      var insideCabinet = document.getElementById(""insideCabinetCheck"");
      var insideFridge = document.getElementById(""insideFridgeCheck"");
      var insideOven = document.getElementById(""insideOvenCheck"");
      var laundry = document.getElementById(""laundryCheck"");
      var interior = document.getElementById(""interiorCheck"");

      function onInsideCabinet() {
        if (insideCabinet.checked) {
  ");
                WriteLiteral(@"        document.getElementById(""insideCabinetImg"").src = ""/image/3-green.png"";
        } else {
          document.getElementById(""insideCabinetImg"").src = ""/image/3.png"";
        }
      }

      function onInsideFridge() {
        if (insideFridge.checked) {
          document.getElementById(""insideFridgeImg"").src = ""/image/5-green.png"";
        } else {
          document.getElementById(""insideFridgeImg"").src = ""/image/5.png"";
        }
      }

      function onInsideOven() {
        if (insideOven.checked) {
          document.getElementById(""insideOvenImg"").src = ""/image/4-green.png"";
        } else {
          document.getElementById(""insideOvenImg"").src = ""/image/4.png"";
        }
      }

      function onLaundry() {
        if (laundry.checked) {
          document.getElementById(""laundryImg"").src = ""/image/2-green.png"";
        } else {
          document.getElementById(""laundryImg"").src = ""/image/2.png"";
        }
      }

      function onInterior() {
        if (i");
                WriteLiteral(@"nterior.checked) {
          document.getElementById(""interiorImg"").src = ""/image/1-green.png"";
        } else {
          document.getElementById(""interiorImg"").src = ""/image/1.png"";
        }
      }

     
      var pincode_check = document.getElementsByClassName(""pincode-check"")[0];
      var schedule_plan = document.getElementsByClassName(""schedule-plan"")[0];
      var address_list = document.getElementById(""address-list"");
      var make_payment = document.getElementById(""make-payment"");

      var setup_service = document.getElementById(""1"");
      var schedule = document.getElementById(""2"");
      var address = document.getElementById(""3"");
      var payment = document.getElementById(""4"");

      var img1 = document.getElementById(""img1"");
      var img2 = document.getElementById(""img2"");
      var img3 = document.getElementById(""img3"");
      var img4 = document.getElementById(""img4"");

      setup_service.addEventListener(""click"", () => {
        pincode_check.style.display =");
                WriteLiteral(@" ""block"";
        schedule_plan.style.display = ""none"";
        address_list.style.display = ""none"";
        make_payment.style.display = ""none"";

        setup_service.classList.add(""add"");
        schedule.classList.remove(""add"");
        address.classList.remove(""add"");
        payment.classList.remove(""add"");

        setup_service.classList.add(""add-color"");
        schedule.classList.remove(""add-color"");
        address.classList.remove(""add-color"");
        payment.classList.remove(""add-color"");

        setup_service.style.color = ""white"";
        schedule.style.color = ""#646464"";
        address.style.color = ""#646464"";
        payment.style.color = ""#646464"";

        setup_service.classList.remove(""add-color-noarrow"");
        schedule.classList.remove(""add-color-noarrow"");
        address.classList.remove(""add-color-noarrow"");
        payment.classList.remove(""add-color-noarrow"");

        img1.src = ""/image/setup-service-white.png"";
        img2.src = ""/image/schedule.pn");
                WriteLiteral(@"g"";
        img3.src = ""/image/details.png"";
        img4.src = ""/image/payment.png"";
      });

      schedule.addEventListener(""click"", () => {
        pincode_check.style.display = ""none"";
        schedule_plan.style.display = ""block"";
        address_list.style.display = ""none"";
        make_payment.style.display = ""none"";

        setup_service.classList.remove(""add"");
        schedule.classList.add(""add"");
        address.classList.remove(""add"");
        payment.classList.remove(""add"");

        setup_service.classList.remove(""add-color"");
        schedule.classList.add(""add-color"");
        address.classList.remove(""add-color"");
        payment.classList.remove(""add-color"");

        setup_service.classList.add(""add-color-noarrow"");
        schedule.classList.remove(""add-color-noarrow"");
        address.classList.remove(""add-color-noarrow"");
        payment.classList.remove(""add-color-noarrow"");

        setup_service.style.color = ""#646464"";
        schedule.style.color = ""w");
                WriteLiteral(@"hite"";
        address.style.color = ""#646464"";
        payment.style.color = ""#646464"";

        img1.src = ""/image/setup-service-white.png"";
        img2.src = ""/image/schedule-white.png"";
        img3.src = ""/image/details.png"";
        img4.src = ""/image/payment.png"";
      });

      address.addEventListener(""click"", () => {
        pincode_check.style.display = ""none"";
        schedule_plan.style.display = ""none"";
        address_list.style.display = ""block"";
        make_payment.style.display = ""none"";

        setup_service.classList.remove(""add"");
        schedule.classList.remove(""add"");
        address.classList.add(""add"");
        payment.classList.remove(""add"");

        setup_service.classList.remove(""add-color"");
        schedule.classList.remove(""add-color"");
        address.classList.add(""add-color"");
        payment.classList.remove(""add-color"");

        setup_service.classList.add(""add-color-noarrow"");
        schedule.classList.add(""add-color-noarrow"");
       ");
                WriteLiteral(@" address.classList.remove(""add-color-noarrow"");
        payment.classList.remove(""add-color-noarrow"");

        setup_service.style.color = ""#646464"";
        schedule.style.color = ""#646464"";
        address.style.color = ""white"";
        payment.style.color = ""#646464"";

        img1.src = ""/image/setup-service-white.png"";
        img2.src = ""/image/schedule-white.png"";
        img3.src = ""/image/details-white.png"";
        img4.src = ""/image/payment.png"";
      });

      payment.addEventListener(""click"", () => {
        pincode_check.style.display = ""none"";
        schedule_plan.style.display = ""none"";
        address_list.style.display = ""none"";
        make_payment.style.display = ""block"";

        setup_service.classList.remove(""add"");
        schedule.classList.remove(""add"");
        address.classList.remove(""add"");
        payment.classList.add(""add"");

        setup_service.classList.remove(""add-color"");
        schedule.classList.remove(""add-color"");
        address.class");
                WriteLiteral(@"List.remove(""add-color"");
        payment.classList.add(""add-color"");

        setup_service.classList.add(""add-color-noarrow"");
        schedule.classList.add(""add-color-noarrow"");
        address.classList.add(""add-color-noarrow"");
        payment.classList.remove(""add-color-noarrow"");

        setup_service.style.color = ""#646464"";
        schedule.style.color = ""#646464"";
        address.style.color = ""#646464"";
        payment.style.color = ""white"";

        img1.src = ""/image/setup-service-white.png"";
        img2.src = ""/image/schedule-white.png"";
        img3.src = ""/image/details-white.png"";
        img4.src = ""/image/payment-white.png"";
      });

      var add_address_btn =
        document.getElementsByClassName(""add-address-btn"")[0];
      add_address_btn.addEventListener(""click"", () => {
        document.getElementsByClassName(""add-address-box"")[0].style.display =
          ""block"";
        add_address_btn.style.display = ""none"";
      });

    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
